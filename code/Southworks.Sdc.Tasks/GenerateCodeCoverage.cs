namespace Southworks.Sdc.Tasks
{
    using System;
    using Microsoft.Build.Utilities;
    using Microsoft.VisualStudio.CodeCoverage;
    using Microsoft.Build.Framework;
    using System.IO;

    /// <summary>
    /// Generates the code coverage information based on the test result files (trx)
    /// generated by the MSTest.exe commandline utility.
    /// </summary>
    public class GenerateCodeCoverage : Task
    {
        /// <summary>
        /// Holds a reference to the default output file name.
        /// </summary>
        private const string DefaultOutputFileName = "CodeCoverageResults.xml";

        /// <summary>
        /// Gets or sets the full path for the output coverage file.
        /// </summary>
        [Required]
        public string OutFile { get; set; }

        /// <summary>
        /// Gets or sets the full path to .coverage file generated by MSTest.exe command-line
        /// utility.
        /// </summary>
        [Required]
        public string CoverageDataFile { get; set; }

        /// <summary>
        /// Gets or sets the full path to the binaries files generated by MSTest.exe after 
        /// test run completion.
        /// </summary>
        [Required]
        public string BinariesPath { get; set; }

        /// <summary>
        /// Executes the task.
        /// </summary>
        /// <returns>A value indicating whether the execution was sucessful or not.</returns>
        public override bool Execute()
        {
            if (string.IsNullOrEmpty(this.OutFile))
            {
                this.OutFile = Path.GetFullPath(DefaultOutputFileName);
            }

            CoverageInfoManager.ExePath = CoverageInfoManager.SymPath = this.BinariesPath;
            
            CoverageInfoManager.CreateInfoFromFile(this.CoverageDataFile)
                               .BuildDataSet(null)
                               .WriteXml(this.OutFile);
            
            return true;
        }
    }
}
